user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections 768;
  multi_accept on;
  use epoll;
}

# example 1
http {
  include /etc/nginx/mime.types;
  access_log off;

  server {
    listen 80;
    listen [::]:80;
    server_name lap1000.xyz;

    location / {
      return 307 https://$server_name$request_uri;
    }
  }

  server {
    listen 443;
    listen [::]:443;
    ssl on;
    server_name lap1000.xyz;

    ssl_certificate /etc/letsencrypt/live/lap1000.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lap1000.xyz/privkey.pem;

    location / {
      root /home/dhkoo/lap1000labs/build;
      index index.html index.htm;
      try_files $uri $uri/ /index.html;
    }
  }
}

# example 2
http {
  upstream endpoint {
    server en.pala.world:8551;
    server klaytn-en.sixnetwork.io:8651 backup;

    keepalive 10;
  }

  server {
    listen 80;
    listen [::]:80;
    server_name gateway.pala.world;

    location / {
      return 307 https://$server_name$request_uri;
    }

	location /ws {
      proxy_pass http://en.pala.world:8552;

      # Websocket support
      proxy_http_version  1.1;
      proxy_set_header    Upgrade $http_upgrade;
      proxy_set_header    Connection "Upgrade";
    }
  }
  server {
    listen 443;
    listen [::]:443;
    ssl on;
    server_name gateway.pala.world;

    ssl_certificate /etc/letsencrypt/live/gateway.pala.world/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/gateway.pala.world/privkey.pem;

    location / {
      proxy_connect_timeout 5;
      include /etc/nginx/proxy_params;
      proxy_pass https://endpoint;
    }

	location /ws {
      proxy_pass http://en.pala.world:8552;

      # Websocket support
      proxy_http_version  1.1;
      proxy_set_header    Upgrade $http_upgrade;
      proxy_set_header    Connection "Upgrade";
    }
  }
}
